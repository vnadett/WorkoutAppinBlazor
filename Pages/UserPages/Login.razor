@page "/user/login"

@using BlazorTest.Models
@using BlazorTest.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;

@inject IDataAccess _db
@inject NavigationManager NavManager
@inject ProtectedSessionStorage storage

<style>
    html, body {
        background-image: url('https://i.pinimg.com/originals/32/f8/2d/32f82de556a88851c0e52005b84ee959.jpg');
        background-size: cover;
        background-repeat: no-repeat;
        height: 100%;
        font-family: 'Numans', sans-serif;
    }

    .container {
        height: 100%;
        align-content: center;
    }

    .card {
        height: 370px;
        margin-top: auto;
        margin-bottom: auto;
        width: 400px;
        background-color: rgba(0,0,0,0.5) !important;
    }

    .card-header h3 {
        color: white;
    }

    .social_icon {
        position: absolute;
        right: 20px;
        top: -45px;
    }

    .input-group-prepend span {
        width: 50px;
        background-color: #FFC312;
        color: black;
        border: 0 !important;
    }

    input:focus {
        outline: 0 0 0 0 !important;
        box-shadow: 0 0 0 0 !important;
    }


    .login_btn {
        color: black;
        background-color: #FFC312;
        width: 100px;
    }

        .login_btn:hover {
            color: black;
            background-color: white;
        }
</style>

<div class="container">
    <div class="d-flex justify-content-center h-100">
        <div class="card">
            <div class="card-header">
                <h3>Bejelentkezés</h3>
            </div>
            <div class="card-body">

                <p style="color: #ff0000">@alert</p>
                <EditForm Model="@userLogin" OnSubmit="@LoginUser">
                    <div class="input-group form-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="oi oi-person"></i></span>
                        </div>
                        <InputText id="UserName" type="text" class="input" @bind-Value="userLogin.UserName" required />
                    </div>
                    <div class="input-group form-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="oi oi-key"></i></span>
                        </div>
                        <InputText id="Password" type="password" class="input" data-type="password" @bind-Value="userLogin.Password" required />
                    </div>
                    <div class="input-group form-group">
                        <input type="submit" value="Belépés" class="btn float-right login_btn">
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code { private List<User> users;
    private User userLogin = new User();
    private string alert;

    protected async Task LoginUser()
    {
        alert = "Bejelentkezés...";
        User u = new User
        {
            UserName = userLogin.UserName,
            Password = userLogin.Password
        };
        users = await _db.GetUsers();

        if (users != null)
        {
            foreach (var user in users)
            {
                if (user.UserName == u.UserName && BCrypt.Net.BCrypt.Verify(u.Password, user.Password))
                {
                    await storage.SetAsync("userid", user.Id);
                    await storage.SetAsync("username", user.UserName);
                    NavManager.NavigateTo("/user/profile");
                }
                else
                {
                    alert = "A felhasználónév vagy jelszó nem megfelelő!";

                }
            }
        }
        else
        {
            alert = "A felhasználónév vagy jelszó nem megfelelő!";

        }
    } }
